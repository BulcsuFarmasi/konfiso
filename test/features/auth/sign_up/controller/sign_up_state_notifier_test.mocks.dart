// Mocks generated by Mockito 5.3.2 from annotations
// in konfiso/test/features/auth/sign_up/controller/sign_up_state_notifier_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:konfiso/features/auth/services/auth_service.dart' as _i2;
import 'package:konfiso/features/auth/sign_up/model/sign_up_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAuthService_0 extends _i1.SmartFake implements _i2.AuthService {
  _FakeAuthService_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SignUpRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSignUpRepository extends _i1.Mock implements _i3.SignUpRepository {
  @override
  _i2.AuthService get signUpService => (super.noSuchMethod(
        Invocation.getter(#signUpService),
        returnValue: _FakeAuthService_0(
          this,
          Invocation.getter(#signUpService),
        ),
        returnValueForMissingStub: _FakeAuthService_0(
          this,
          Invocation.getter(#signUpService),
        ),
      ) as _i2.AuthService);
  @override
  _i4.Future<void> signUp(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUp,
          [
            email,
            password,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
